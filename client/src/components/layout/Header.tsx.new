import { useState, useEffect, useContext } from 'react';
import { useTheme } from 'next-themes';
import { Bell, Menu, Sun, Moon } from 'lucide-react';
import { AuthContext } from '@/context/AuthProvider';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Button } from '@/components/ui/button';
import { getInitials } from '@/lib/utils';

interface HeaderProps {
  toggleSidebar: () => void;
}

export function Header({ toggleSidebar }: HeaderProps) {
  const [currentTime, setCurrentTime] = useState<string>('');
  const { user } = useContext(AuthContext);
  const { theme, setTheme } = useTheme();

  // Update the time every second
  useEffect(() => {
    const updateTime = () => {
      const now = new Date();
      setCurrentTime(
        now.toLocaleTimeString('pt-BR', {
          hour: '2-digit',
          minute: '2-digit',
          second: '2-digit',
        })
      );
    };

    updateTime();
    const intervalId = setInterval(updateTime, 1000);
    return () => clearInterval(intervalId);
  }, []);

  const toggleTheme = () => {
    setTheme(theme === 'dark' ? 'light' : 'dark');
  };

  return (
    <header className="header">
      <div className="container flex justify-between items-center h-full">
        {/* Left side - Mobile menu button and logo on mobile */}
        <div className="flex items-center">
          <Button
            variant="ghost"
            size="icon"
            className="mr-2 md:hidden"
            onClick={toggleSidebar}
          >
            <Menu size={20} />
            <span className="sr-only">Menu</span>
          </Button>
        </div>

        {/* Right side - Time, theme toggle, notifications and user */}
        <div className="flex items-center gap-4">
          {/* Current time */}
          <div className="text-sm text-muted-foreground hidden sm:block">
            {currentTime}
          </div>

          {/* Theme toggle button */}
          <Button 
            variant="ghost" 
            size="icon" 
            onClick={toggleTheme}
            className="rounded-full w-9 h-9"
            aria-label="Alternar tema"
          >
            {theme === 'dark' ? (
              <Sun size={18} className="text-yellow-400" />
            ) : (
              <Moon size={18} className="text-primary" />
            )}
          </Button>

          {/* Notifications */}
          <div className="relative">
            <Button 
              variant="ghost" 
              size="icon"
              className="rounded-full w-9 h-9 text-muted-foreground"
            >
              <Bell size={18} />
            </Button>
            <span className="absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-500"></span>
          </div>

          {/* User Profile */}
          <div className="flex items-center gap-3 pl-4 border-l">
            <Avatar>
              <AvatarImage src="" alt={user?.name || "Usuário"} />
              <AvatarFallback className="bg-primary/10 text-primary">
                {user ? getInitials(user.name) : "U"}
              </AvatarFallback>
            </Avatar>
            <div className="hidden md:block">
              <p className="text-sm font-medium line-clamp-1">
                {user?.name || 'Usuário'}
              </p>
              <p className="text-xs text-muted-foreground">
                {user?.role === 'admin' ? 'Administrador' : user?.role === 'doctor' ? 'Médico' : 'Enfermeiro'}
              </p>
            </div>
          </div>
        </div>
      </div>
    </header>
  );
}