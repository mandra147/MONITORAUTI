import { useContext } from 'react';
import { Link, useLocation } from 'wouter';
import { AuthContext } from '@/context/AuthProvider';
import { cn } from '@/lib/utils';
import {
  LayoutDashboard,
  Users,
  Calendar,
  FileText,
  User,
  Settings,
  LogOut,
  Activity
} from 'lucide-react';

interface SidebarProps {
  isMobileSidebarOpen: boolean;
  closeMobileSidebar: () => void;
}

export function Sidebar({ isMobileSidebarOpen, closeMobileSidebar }: SidebarProps) {
  const [location] = useLocation();
  const { logout } = useContext(AuthContext);

  const handleLogout = async () => {
    await logout();
  };

  const isActive = (path: string) => {
    return location === path || (path !== '/dashboard' && location.startsWith(path));
  };

  // Menus seguindo exatamente as imagens de referência
  const menuItems = [
    {
      items: [
        { name: 'Dashboard', path: '/dashboard', icon: <LayoutDashboard size={18} /> },
        { name: 'Pacientes', path: '/patients', icon: <Users size={18} /> },
        { name: 'Agenda', path: '/agenda', icon: <Calendar size={18} /> },
        { name: 'Rounds', path: '/rounds', icon: <Activity size={18} /> },
      ],
    },
    {
      items: [
        { name: 'Relatórios', path: '/reports', icon: <FileText size={18} /> },
        { name: 'Perfil', path: '/profile', icon: <User size={18} /> },
        { name: 'Configurações', path: '/settings', icon: <Settings size={18} /> },
      ],
    }
  ];

  return (
    <>
      {/* Overlay for mobile */}
      <div 
        className={cn(
          "fixed inset-0 z-30 bg-background/80 backdrop-blur-sm md:hidden",
          isMobileSidebarOpen ? "block" : "hidden"
        )}
        onClick={closeMobileSidebar}
      />

      {/* Sidebar component */}
      <aside className="sidebar">
        {/* Logo */}
        <div className="sidebar-section border-b border-white/10">
          <div className="sidebar-logo">MONITORAUTI</div>
          <div className="sidebar-subtitle">Sistema Avançado de Monitoramento</div>
        </div>

        {/* Navigation Menu - exactly matching reference images */}
        <div className="flex flex-col h-[calc(100%-64px)]">
          <div className="flex-1 py-4">
            <div className="mb-6">
              <div className="sidebar-heading">Menu</div>
              <nav className="space-y-1">
                {menuItems[0].items.map((item) => (
                  <Link
                    key={item.path}
                    href={item.path}
                    className={cn(
                      "sidebar-link",
                      isActive(item.path) && "sidebar-link-active"
                    )}
                  >
                    {item.icon}
                    <span>{item.name}</span>
                  </Link>
                ))}
              </nav>
            </div>

            <div>
              <div className="sidebar-heading">Administração</div>
              <nav className="space-y-1">
                {menuItems[1].items.map((item) => (
                  <Link
                    key={item.path}
                    href={item.path}
                    className={cn(
                      "sidebar-link",
                      isActive(item.path) && "sidebar-link-active"
                    )}
                  >
                    {item.icon}
                    <span>{item.name}</span>
                  </Link>
                ))}
              </nav>
            </div>
          </div>

          {/* Logout button */}
          <div className="px-4 py-4 border-t border-white/10">
            <button
              onClick={handleLogout}
              className="sidebar-link group hover:text-red-400 hover:bg-red-400/10"
            >
              <LogOut size={18} className="group-hover:text-red-400" />
              <span>Sair</span>
            </button>
          </div>
        </div>
      </aside>
    </>
  );
}